{"version":3,"sources":["webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/item-tags.tsx","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/post.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/post-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/post.tsx"],"names":["MDXRenderer","require","module","ItemTags","tags","useMinimalBlogConfig","tagsPath","basePath","Fragment","map","tag","i","key","slug","as","Link","to","replaceSlashes","name","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","fn","shadow","v","Post","post","data","title","description","excerpt","image","banner","childImageSharp","resize","src","undefined","pathname","variant","sx","color","mt","a","fontSize","date","timeToRead","my","boxShadow","join","body","PostComponent","query"],"mappings":"gFAMA,IAAMA,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,qHCqBAG,IAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTC,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMC,SAAP,KACGJ,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAD,CAAOG,GAAIC,OAAMC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,EAAjB,IAA6BI,EAAIG,OACjEH,EAAIQ,a,qrECtBjB,IAAMC,EAAQlB,EAAd,Q,EACkCA,EAAQ,QAAlCmB,E,EAAAA,iBAAkBC,E,EAAAA,IAClBC,EAAgBrB,EAAQ,QAAxBqB,YAERpB,UAAiB,SAAqB,GAKlC,IAJFqB,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBP,EAAtB,GACMQ,EAAWN,EAFhB,GAKKO,EAAMV,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMW,EAAS,GAGbX,MAHa,EAIbE,OAJF,GAQMU,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAnB,GAAG,OAAIkB,EAAJ,MAG3B,OAFQ,mCAAR,KAEOI,2BAAP,OACC,CAACT,EAlBJ,IAoBA,OAAON,EAAA,mBAA2BK,WAAYG,GAA9C,M,4OCAIQ,EADK,CAAC,OAAD,oBACO1B,KAAI,SAAC2B,GAAD,iCAAkCA,EAAlC,IAAuCA,EAAvC,UA2CPC,EAzCF,SAAC,GAAD,IAAWC,EAAX,EAAGC,KAAQD,KAAX,OACX,YAAC,IAAD,KACE,YAAC,IAAD,CACEE,MAAOF,EAAKE,MACZC,YAAaH,EAAKG,YAAcH,EAAKG,YAAcH,EAAKI,QACxDC,MAAOL,EAAKM,OAASN,EAAKM,OAAOC,gBAAgBC,OAAOC,SAAMC,EAC9DC,SAAUX,EAAKzB,OAEjB,YAAC,IAAD,CAASqC,QAAQ,aAAaZ,EAAKE,OACnC,iBACEW,GAAI,CACFC,MAAO,YACPC,GAAI,EACJC,EAAG,CAAEF,MAAO,aACZG,SAAU,CAAC,EAAG,EAAG,KAGnB,wBAAOjB,EAAKkB,MACXlB,EAAKlC,MACJ,YAAC,IAAMI,SAAP,WAEE,YAAC,IAAD,CAAUJ,KAAMkC,EAAKlC,QAGxBkC,EAAKmB,YAAL,MACAnB,EAAKmB,YAAc,wBAAOnB,EAAKmB,WAAZ,cAEtB,uBACEN,GAAI,CACFO,GAAI,EACJ,6BAA8B,CAC5BA,GAAI,CAAC,EAAG,EAAG,GACXC,UAAWxB,EAAOyB,KAAP,SAIf,YAAC,cAAD,KAActB,EAAKuB,S,urBCrEVC,UCOA,YAAqB,IAAlBvB,EAAkB,EAAlBA,KACRD,EAASC,EAATD,KAER,OAAO,kBAAC,EAAD,CAAMC,KAAI,KAAOA,EAAP,CAAaD,YAHjB,IDLFyB,EAAQ","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx-f0e9fa7a603e4935c70a.js","sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","/** @jsx jsx */\nimport { jsx, Heading } from \"theme-ui\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\nimport React from \"react\";\nimport Layout from \"./layout\";\nimport ItemTags from \"./item-tags\";\nimport SEO from \"./seo\";\n\ntype PostProps = {\n  data: {\n    post: {\n      slug: string;\n      title: string;\n      date: string;\n      tags?: {\n        name: string;\n        slug: string;\n      }[];\n      description?: string;\n      body: string;\n      excerpt: string;\n      timeToRead?: number;\n      banner?: {\n        childImageSharp: {\n          resize: {\n            src: string;\n          };\n        };\n      };\n    };\n  };\n};\n\nconst px = [`32px`, `16px`, `8px`, `4px`];\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`);\n\nconst Post = ({ data: { post } }: PostProps) => (\n  <Layout>\n    <SEO\n      title={post.title}\n      description={post.description ? post.description : post.excerpt}\n      image={post.banner ? post.banner.childImageSharp.resize.src : undefined}\n      pathname={post.slug}\n    />\n    <Heading variant=\"styles.h2\">{post.title}</Heading>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 3,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <time>{post.date}</time>\n      {post.tags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n      {post.timeToRead && ` — `}\n      {post.timeToRead && <span>{post.timeToRead} min read</span>}\n    </p>\n    <section\n      sx={{\n        my: 5,\n        \".gatsby-resp-image-wrapper\": {\n          my: [4, 4, 5],\n          boxShadow: shadow.join(`, `),\n        },\n      }}\n    >\n      <MDXRenderer>{post.body}</MDXRenderer>\n    </section>\n  </Layout>\n);\n\nexport default Post;\n","import { graphql } from \"gatsby\"\nimport PostComponent from \"../components/post\"\n\nexport default PostComponent\n\nexport const query = graphql`\n  query($slug: String!, $formatString: String!) {\n    post(slug: { eq: $slug }) {\n      slug\n      title\n      date(formatString: $formatString)\n      tags {\n        name\n        slug\n      }\n      description\n      body\n      excerpt\n      timeToRead\n      banner {\n        childImageSharp {\n          resize(width: 1200, quality: 90) {\n            src\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Post from \"../../../components/post\"\n\ntype Props = {\n  data: {\n    post: any\n    [key: string]: any\n  }\n}\n\nexport default ({ data }: Props) => {\n  const { post } = data\n\n  return <Post data={{ ...data, post }} />\n}\n"],"sourceRoot":""}